import { Injectable, OnApplicationBootstrap } from '@nestjs/common';
import { UserService } from './user.service';
import * as bcrypt from 'bcrypt';

@Injectable()
export class UserSetupService implements OnApplicationBootstrap {
  constructor(private readonly userService: UserService) {}

  async onApplicationBootstrap() {
    await this.createDefaultAdmin();
  }

  private async createDefaultAdmin() {
    try {
      console.log('üîç V√©rification de l\'existence de l\'administrateur par d√©faut...');
      
      // V√©rifier si un administrateur existe d√©j√†
      const adminEmail = 'admin@ministere.gov';
      const existingAdmin = await this.userService.findByEmail(adminEmail);
      
      if (existingAdmin) {
        console.log('‚úÖ Administrateur par d√©faut existe d√©j√†');
        return;
      }

      // Cr√©er l'administrateur par d√©faut
      const defaultAdmin = {
        name: 'Administrateur Syst√®me',
        email: adminEmail,
        password: 'admin123', // Mot de passe temporaire - √† changer imm√©diatement
        role: 'Admin',
        status: 'active' as const
      };

      await this.userService.create(defaultAdmin);
      
      console.log('‚úÖ Administrateur par d√©faut cr√©√© avec succ√®s');
      console.log('üìß Email: admin@ministere.gov');
      console.log('üîë Mot de passe: admin123');
      console.log('‚ö†Ô∏è  IMPORTANT: Changez le mot de passe imm√©diatement apr√®s la premi√®re connexion!');
      
    } catch (error) {
      console.error('‚ùå Erreur lors de la cr√©ation de l\'administrateur par d√©faut:', error.message);
    }
  }
}